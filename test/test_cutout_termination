import os
import sys


def terminate_if_cutout_exists(subprocess_check=False):
    """
    Check if any of the requested cutout files exist.
    If that's the case, terminate execution to avoid data loss.
    """
    if subprocess_check:
        import argparse

        parser = argparse.ArgumentParser()
        parser.add_argument("--mode", type=int, default=snakemake.Mode.default)
        parser.add_argument("--target-jobs", type=str, nargs="+", default=[])
        args, _ = parser.parse_known_args(sys.argv)
        if args.mode == snakemake.Mode.subprocess and "build_cutout" not in " ".join(
            args.target_jobs
        ):
            return

    cutout_fl = "cutout.txt"
    if os.path.exists(cutout_fl):
        os.remove(cutout_fl)
        raise Exception(
            f"A cutout file {cutout_fl} exists and risks to be overwritten. "
            "If this is an intended behavior, please move or delete this file and re-run the rule."
        )


terminate_if_cutout_exists(subprocess_check=config.get("subprocess_check", False))


rule remove_cutout:
    input:
        "cutout.txt",
    run:
        os.remove(input[0])


rule build_cutout:
    output:
        "cutout.txt",
    shell:
        "echo build cutout > {output}"
